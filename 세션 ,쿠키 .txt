Cookie,Session

1)Cookie
웹서버가 브라우저에게 지시하여 사용자의 로컬컴퓨터에 파일 또는 메모리에 저장하는 작은
기록 정보 파일 
파일에 담긴 정보는 인터넷 사용자가 같은 웹사이트를 방문할때 마다 읽히고
수시로 새로운 정보로 바뀔수있다.
사용 예: 로그인, 자동완성 , 비회원으로 장바구니담기

2)Cookie의 구성요소
Name : 쿠키의 이름
Value : 쿠키의 저장된 값
Expires : 쿠키가 언제 삭제되는지 결정
Domain :쿠키가 사용되는 도메인을 지정
Path : 쿠키를 반환할 경로를 결정 
3) 쿠키의 종류 
Session cookie 만료기간을 설정하고 메모리에만 저장되며 브라우저 종료시 쿠키를 삭제 
Persistent cookie 장기간 유지되는 쿠키 (1년정도)
Secure cookie HTTPS 에서만 사용 쿠키가 암호화 되서 전송 
4) 쿠키의 단점
쿠키에 대한 정보를 매 헤더(Http header)에 추가하여 보내기때문에 상당한 트래픽을 발생시킨다
결제정보등 쿠키에 저장하였을때 쿠키가 유출될경우 보안에대한 문제점이 생긴다

세션(HTTP Session)
No Image

배경
쿠키의 트래픽 문제와 쿠키를 변경하는 보안적 이슈를 해결하기 위해 등장하였습니다.
세션(HTTP Session)이란?
HTTP Session id를 식별자로 구별하여 데이터를 사용자의 브라우저에 쿠키형태가 아닌 접속한 서버 DB에 정보를 저장 합니다.
클라이언트는 HTTP Session id를 쿠키로 메모리 저장된 형태로 가지고 있습니다.
메모리에 저장하기 때문에 브라우저가 종료되면 사라지게 됩니다.
세션(HTTP Session) 절차
클라이언트가 서버에 Resource를 요청합니다.
서버에서는 HTTP Request를 통해 쿠키에서 Session id를 확인을 한 후에 없으면 Set-Cookie를 통해 새로 발행한 Session-id 보냅니다.
클라이언트는 HTTP Request 헤더에 Session id를 포함하여 원하는 Resource를 요청을 합니다.
서버는 Session id를 통해 해당 세션을 찾아 클라이언트 상태 정보를 유지하며 적절한 응답을 합니다.
Server-Side 관점의 세션
장점
서버에 저장하기 때문에 매우 관리하기 편하고 효율적입니다.
단점
load-balancing/시스템 효율성에서 handling하기 어렵습니다.
세션 저장 장치가 부족한 시스템에는 적합하지 않습니다.
